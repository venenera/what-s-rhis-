#include <iostream>  
#include <cmath>
#include <iomanip>
using namespace std;
int number;
class fraction {
    private:
        
    public: 
        int numer; //числитель
        int denom; //знаменатель
        fraction():numer(0), denom(0) {}
    void frmult (fraction a, fraction b) { //произведение
            numer = a.numer * b.denom;
            denom = a.denom * b.denom;
        }
    //функция из учебника Лафоре
        void lowterms() {      // сокращение дроби
        long tnum, tden, temp, gcd;
        tnum = labs(numer);            // используем неотрицательные 
        tden = labs(denom);            // значения (нужен cmath)
        if(tden == 0)                // проверка знаменателя на 0
          { cout << "Недопустимый знаменатель!"; exit(1); }
        else if(tnum == 0)           // проверка числителя на 0
          { numer = 0; denom = 1; return; }
        // нахождение наибольшего общего делителя
        while(tnum != 0) {
          if(tnum < tden)            // если числитель больше знаменателя,
            { temp = tnum; tnum = tden; tden = temp; } // меняем их местами
          tnum = tnum - tden;        // вычитание
        }
        gcd = tden;                  // делим числитель и знаменатель на
        numer = numer / gcd;             // полученный наибольший общий делитель
        denom = denom / gcd;
    }
    void showfraction()const { cout << "Ответ: " << numer << "/" << denom << endl; }
};
int main()
{
    setlocale(LC_ALL, "rus");
    fraction a, b, c;
	char dummychar;
	a.denom = b.denom = number;
    cout << "Введите знаменатель" << endl; 
    cin >> number;
    for (int j = 1; j<number; j++) {
        a.numer = j;
        a.denom = number;
        a.lowterms();
        a.disp_fr();
    }
  cout << endl;
  for(int i = 1; i < number; i++)
        {
   b.numer=i;
            b.denom=number;
            b.lowterms();
   b.disp_fr();
  
   for(int j = 1; j < number; j++) 
   {
    a.numer=j;
    a.denom=number;
    c.mul_fr(a, b);
    c.lowterms();
    c.disp_fr();
   }
            cout<<endl;
  }
   system ("pause");
 return 0;
}
