#include <iostream>  
#include <cmath>
#include <iomanip>
using namespace std;
int NUMBER;
class fraction {
    private:
        
    public: 
        int numer; //числитель
        int denom; //знаменатель
        fraction():numer(0), denom(0) {}
    void frmult (fraction a, fraction b) { //произведение
            numer = a.numer * b.numer;
            denom = a.denom * b.denom;
        }
    //ф-я, приводящая дробь к несократимому видуе
    void lowterms() {      // сокращение дроби
        long tnum, tden, temp, gcd;
        tnum = labs(numer);           // используем неотрицательные 
        tden = labs(denom);           // значения (нужен cmath)
        if(tden == 0)                 // проверка знаменателя на 0
            { cout << "Недопустимый знаменатель!"; exit(1); }
        else if(tnum == 0)            // проверка числителя на 0
            { numer = 0; denom = 1; return; }
        // нахождение наибольшего общего делителя
        while(tnum != 0) {
            if(tnum < tden)                                 // если числитель больше знаменателя,
                { temp = tnum; tnum = tden; tden = temp; }  // меняем их местами
            tnum = tnum - tden;                             // вычитание
        }
        gcd = tden;                      // делим числитель и знаменатель на
        numer = numer / gcd;             // полученный наибольший общий делитель
        denom = denom / gcd;
    }
    void showfraction()const { cout << numer << "/" << denom << "\t"; }
};
int main() {
    setlocale(LC_ALL, "rus");
    fraction a, b, c;
	char dummychar;
	a.denom = b.denom = NUMBER;
    cout << "Введите знаменатель: "; 
    cin >> NUMBER;
    for (int k = 1; k < NUMBER; k++) {
        a.numer = k;
        a.denom = NUMBER;
        a.lowterms();
        a.showfraction();
    }
    cout << endl;
    for(int i = 1; i < NUMBER; i++) {
        b.numer = i;
        b.denom = NUMBER;
        b.lowterms();
        b.showfraction();
  
        for(int k = 1; k < NUMBER; k++) {
            a.numer = k;
            a.denom = NUMBER;
            c.frmult(a, b);
            c.lowterms();
            c.showfraction();
        }
        cout << endl;
    }
    return 0;
}
